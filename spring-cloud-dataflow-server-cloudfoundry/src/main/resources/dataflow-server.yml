server:
  port: 9393
management:
  contextPath: /management

info:
  app:
    name: "@project.artifactId@"
    description: "@project.description@"
    version: "@project.version@"

cloudfoundry:
#  apiEndpoint: https://api.run.pivotal.io  # Location of the CloudFoundry REST API endpoint to use.
#  domain: cfapps.io                        # The domain to use when mapping routes for applications.
#  organization: org                        # The organization to use when registering new applications.
#  password: user-password                  # Password to use to authenticate against the Cloud Foundry API.
#  services: redis                          # The names of services to bind to each application deployed as a module.
  skipSslValidation: false                  # Allow operation using self-signed certificates.
#  space: ${vcap.application.space_name:development} # The space to use when registering new applications.
#  username: username                       # Username to use to authenticate against the Cloud Foundry API.

security:
  basic:
    enabled: false

spring:
  application:
    name: spring-cloud-dataflow-server-cloudfoundry
  cloud:
    config:
      uri: http://localhost:8888
    dataflow:
      registry:
        populator:
          locations: classpath:META-INF/applications.properties

# If you prefer to use Eureka to locate the Config Server, you can do that by setting
# spring.cloud.config.discovery.enabled=true (default "false"). The net result of that is 
# that client apps all need a bootstrap.yml (or an environment variable) with the Eureka 
# server address, e.g. in eureka.client.serviceUrl.defaultZone
#
#  cloud:
#     config:
#        discovery:
#           enabled: true
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
